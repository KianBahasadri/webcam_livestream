import imageio as iio
import matplotlib.pyplot as plt
import time

camera = iio.get_reader("<video0>")
meta = camera.get_meta_data()
num_frames = 3 * int(meta["fps"])
delay = 1/meta["fps"]

buffer = list()
for frame_counter in range(num_frames):
    frame = camera.get_next_data()
    buffer.append(frame)
    time.sleep(delay)

camera.close()


import io
memory = io.BytesIO()
iio.mimwrite(memory, buffer, 'mp4', macro_block_size=8, fps=meta["fps"])

from fastapi import FastAPI
from fastapi.responses import FileResponse, Response

app = FastAPI()

@app.get(
    "/",

    # Set what the media type will be in the autogenerated OpenAPI specification.
    # fastapi.tiangolo.com/advanced/additional-responses/#additional-media-types-for-the-main-response
    responses = {
        200: {
            "content": {"video/mp4": {}}
        }
    },

    # Prevent FastAPI from adding "application/json" as an additional
    # response media type in the autogenerated OpenAPI specification.
    # https://github.com/tiangolo/fastapi/issues/3258
    response_class=Response
)
def get_vid():
    vid_bytes = memory.getvalue()
    # media_type here sets the media type of the actual response sent to the client.
    return Response(content=vid_bytes, media_type="video/mp4")

